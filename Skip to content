Skip to content

## Navigation Menu

[Sign in](https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Fvercel%2Fmodelfusion)
- 

        Product














        GitHub Copilot
        Write better code with AI











        Security
        Find and fix vulnerabilities











        Actions
        Automate any workflow











        Codespaces
        Instant dev environments











        Issues
        Plan and track work











        Code Review
        Manage code changes











        Discussions
        Collaborate outside of code











        Code Search
        Find more, search less










                    Explore



      All features






      Documentation








      GitHub Skills







  [Blog](https://github.blog)






- 
  [GitHub Copilot
        Write better code with AI](https://github.com/features/copilot)
- 
  [Security
        Find and fix vulnerabilities](https://github.com/features/security)
- 
  [Actions
        Automate any workflow](https://github.com/features/actions)
- 
  [Codespaces
        Instant dev environments](https://github.com/features/codespaces)
- 
  [Issues
        Plan and track work](https://github.com/features/issues)
- 
  [Code Review
        Manage code changes](https://github.com/features/code-review)
- 
  [Discussions
        Collaborate outside of code](https://github.com/features/discussions)
- 
  [Code Search
        Find more, search less](https://github.com/features/code-search)
- 
  [All features](https://github.com/features)
- 
  [Documentation](https://docs.github.com)
- 
  [GitHub Skills](https://skills.github.com)
- 
  [Blog](https://github.blog)
- 

        Solutions







                    By company size



      Enterprises






      Small and medium teams






      Startups






      Nonprofits







                    By use case



      DevSecOps






      DevOps






      CI/CD






      View all use cases









                    By industry



      Healthcare






      Financial services






      Manufacturing






      Government






      View all industries








            [View all solutions](https://github.com/solutions)         


- 
  [Enterprises](https://github.com/enterprise)
- 
  [Small and medium teams](https://github.com/team)
- 
  [Startups](https://github.com/enterprise/startups)
- 
  [Nonprofits](https://github.com/solutions/industry/nonprofits)
- 
  [DevSecOps](https://github.com/solutions/use-case/devsecops)
- 
  [DevOps](https://github.com/solutions/use-case/devops)
- 
  [CI/CD](https://github.com/solutions/use-case/ci-cd)
- 
  [View all use cases](https://github.com/solutions/use-case)
- 
  [Healthcare](https://github.com/solutions/industry/healthcare)
- 
  [Financial services](https://github.com/solutions/industry/financial-services)
- 
  [Manufacturing](https://github.com/solutions/industry/manufacturing)
- 
  [Government](https://github.com/solutions/industry/government)
- 
  [View all industries](https://github.com/solutions/industry)
- 

        Resources







                    Topics



      AI






      DevOps






      Security






      Software Development






      View all









                    Explore



      Learning Pathways








      White papers, Ebooks, Webinars








      Customer Stories






      Partners







  [Executive Insights](https://github.com/solutions/executive-insights)






- 
  [AI](https://github.com/resources/articles/ai)
- 
  [DevOps](https://github.com/resources/articles/devops)
- 
  [Security](https://github.com/resources/articles/security)
- 
  [Software Development](https://github.com/resources/articles/software-development)
- 
  [View all](https://github.com/resources/articles)
- 
  [Learning Pathways](https://resources.github.com/learn/pathways)
- 
  [White papers, Ebooks, Webinars](https://resources.github.com)
- 
  [Customer Stories](https://github.com/customer-stories)
- 
  [Partners](https://partner.github.com)
- 
  [Executive Insights](https://github.com/solutions/executive-insights)
- 

        Open Source












        GitHub Sponsors
        Fund open source developers













        The ReadME Project
        GitHub community articles








                    Repositories



      Topics






      Trending





  [Collections](https://github.com/collections)






- 
  [GitHub Sponsors
        Fund open source developers](https://github.com/sponsors)
-

## Navigation Menu

[The ReadME Project
        GitHub community articles](https://github.com/readme)
- 
  [Topics](https://github.com/topics)
- 
  [Trending](https://github.com/trending)
- 
  [Collections](https://github.com/collections)
- 

        Enterprise














        Enterprise platform
        AI-powered developer platform








                    Available add-ons







        Advanced Security
        Enterprise-grade security features











        GitHub Copilot
        Enterprise-grade AI features






  [Premium Support
        Enterprise-grade 24/7 support](https://github.com/premium-support)






- 
  [Enterprise platform
        AI-powered developer platform](https://github.com/enterprise)
- 
  [Advanced Security
        Enterprise-grade security features](https://github.com/enterprise/advanced-security)
- 
  [GitHub Copilot
        Enterprise-grade AI features](https://github.com/features/copilot)
- 
  [Premium Support
        Enterprise-grade 24/7 support](https://github.com/premium-support)
- 
    [Pricing](https://github.com/pricing)

- 
  [GitHub Copilot
        Write better code with AI](https://github.com/features/copilot)
- 
  [Security
        Find and fix vulnerabilities](https://github.com/features/security)
- 
  [Actions
        Automate any workflow](https://github.com/features/actions)
- 
  [Codespaces
        Instant dev environments](https://github.com/features/codespaces)
- 
  [Issues
        Plan and track work](https://github.com/features/issues)
- 
  [Code Review
        Manage code changes](https://github.com/features/code-review)
- 
  [Discussions
        Collaborate outside of code](https://github.com/features/discussions)
- 
  [Code Search
        Find more, search less](https://github.com/features/code-search)
[GitHub Copilot
        Write better code with AI](https://github.com/features/copilot)
[Security
        Find and fix vulnerabilities](https://github.com/features/security)
[Actions
        Automate any workflow](https://github.com/features/actions)
[Codespaces
        Instant dev environments](https://github.com/features/codespaces)
[Issues
        Plan and track work](https://github.com/features/issues)
[Code Review
        Manage code changes](https://github.com/features/code-review)
[Discussions
        Collaborate outside of code](https://github.com/features/discussions)
[Code Search
        Find more, search less](https://github.com/features/code-search)
- 
  [All features](https://github.com/features)
- 
  [Documentation](https://docs.github.com)
- 
  [GitHub Skills](https://skills.github.com)
- 
  [Blog](https://github.blog)
[All features](https://github.com/features)
[Documentation](https://docs.github.com)
[GitHub Skills](https://skills.github.com)
[Blog](https://github.blog)
- 
  [Enterprises](https://github.com/enterprise)
- 
  [Small and medium teams](https://github.com/team)
- 
  [Startups](https://github.com/enterprise/startups)
- 
  [Nonprofits](https://github.com/solutions/industry/nonprofits)
[Enterprises](https://github.com/enterprise)
[Small and medium teams](https://github.com/team)
[Startups](https://github.com/enterprise/startups)
[Nonprofits](https://github.com/solutions/industry/nonprofits)
- 
  [DevSecOps](https://github.com/solutions/use-case/devsecops)
- 
  [DevOps](https://github.com/solutions/use-case/devops)
- 
  [CI/CD](https://github.com/solutions/use-case/ci-cd)
- 
  [View all use cases](https://github.com/solutions/use-case)
[DevSecOps](https://github.com/solutions/use-case/devsecops)
[DevOps](https://github.com/solutions/use-case/devops)
[CI/CD](https://github.com/solutions/use-case/ci-cd)
[View all use cases](https://github.com/solutions/use-case)
- 
  [Healthcare](https://github.com/solutions/industry/healthcare)
- 
  [Financial services](https://github.com/solutions/industry/financial-services)
- 
  [Manufacturing](https://github.com/solutions/industry/manufacturing)
- 
  [Government](https://github.com/solutions/industry/government)
- 
  [View all industries](https://github.com/solutions/industry)
[Healthcare](https://github.com/solutions/industry/healthcare)
[Financial services](https://github.com/solutions/industry/financial-services)
[Manufacturing](https://github.com/solutions/industry/manufacturing)
[Government](https://github.com/solutions/industry/government)
[View all industries](https://github.com/solutions/industry)
[View all solutions](https://github.com/solutions)
-

## Navigation Menu

[AI](https://github.com/resources/articles/ai)
- 
  [DevOps](https://github.com/resources/articles/devops)
- 
  [Security](https://github.com/resources/articles/security)
- 
  [Software Development](https://github.com/resources/articles/software-development)
- 
  [View all](https://github.com/resources/articles)
[AI](https://github.com/resources/articles/ai)
[DevOps](https://github.com/resources/articles/devops)
[Security](https://github.com/resources/articles/security)
[Software Development](https://github.com/resources/articles/software-development)
[View all](https://github.com/resources/articles)
- 
  [Learning Pathways](https://resources.github.com/learn/pathways)
- 
  [White papers, Ebooks, Webinars](https://resources.github.com)
- 
  [Customer Stories](https://github.com/customer-stories)
- 
  [Partners](https://partner.github.com)
- 
  [Executive Insights](https://github.com/solutions/executive-insights)
[Learning Pathways](https://resources.github.com/learn/pathways)
[White papers, Ebooks, Webinars](https://resources.github.com)
[Customer Stories](https://github.com/customer-stories)
[Partners](https://partner.github.com)
[Executive Insights](https://github.com/solutions/executive-insights)
- 
  [GitHub Sponsors
        Fund open source developers](https://github.com/sponsors)
[GitHub Sponsors
        Fund open source developers](https://github.com/sponsors)
- 
  [The ReadME Project
        GitHub community articles](https://github.com/readme)
[The ReadME Project
        GitHub community articles](https://github.com/readme)
- 
  [Topics](https://github.com/topics)
- 
  [Trending](https://github.com/trending)
- 
  [Collections](https://github.com/collections)
[Topics](https://github.com/topics)
[Trending](https://github.com/trending)
[Collections](https://github.com/collections)
- 
  [Enterprise platform
        AI-powered developer platform](https://github.com/enterprise)
[Enterprise platform
        AI-powered developer platform](https://github.com/enterprise)
- 
  [Advanced Security
        Enterprise-grade security features](https://github.com/enterprise/advanced-security)
- 
  [GitHub Copilot
        Enterprise-grade AI features](https://github.com/features/copilot)
- 
  [Premium Support
        Enterprise-grade 24/7 support](https://github.com/premium-support)
[Advanced Security
        Enterprise-grade security features](https://github.com/enterprise/advanced-security)
[GitHub Copilot
        Enterprise-grade AI features](https://github.com/features/copilot)
[Premium Support
        Enterprise-grade 24/7 support](https://github.com/premium-support)
[Pricing](https://github.com/pricing)

# Search code, repositories, users, issues, pull requests...
[Search syntax tips](https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax)

# Provide feedback
We read every piece of feedback, and take your input very seriously.

## Use saved searches to filter your results more quickly

To see all available qualifiers, see our [documentation](https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax).
[Sign in](https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Fvercel%2Fmodelfusion)
[Sign up](https://github.com/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&source=header-repo&source_repo=vercel%2Fmodelfusion)
[Reload](https://github.com/vercel/modelfusion)
[Reload](https://github.com/vercel/modelfusion)
[Reload](https://github.com/vercel/modelfusion)
[vercel](https://github.com/vercel)
[modelfusion](https://github.com/vercel/modelfusion)
- 
            [Notifications](https://github.com/login?return_to=%2Fvercel%2Fmodelfusion)    You must be signed in to change notification settings


- 
          [Fork
    89](https://github.com/login?return_to=%2Fvercel%2Fmodelfusion)

- 

        [Star
          1.2k](https://github.com/login?return_to=%2Fvercel%2Fmodelfusion)

[Notifications](https://github.com/login?return_to=%2Fvercel%2Fmodelfusion)
[Fork
    89](https://github.com/login?return_to=%2Fvercel%2Fmodelfusion)
[Star
          1.2k](https://github.com/login?return_to=%2Fvercel%2Fmodelfusion)
The TypeScript library for building AI applications.
[modelfusion.dev](https://modelfusion.dev)

### License

[MIT license](https://github.com/vercel/modelfusion/blob/main/LICENSE)
[1.2k
          stars](https://github.com/vercel/modelfusion/stargazers)
[89
          forks](https://github.com/vercel/modelfusion/forks)
[Branches](https://github.com/vercel/modelfusion/branches)
[Tags](https://github.com/vercel/modelfusion/tags)
[Activity](https://github.com/vercel/modelfusion/activity)
[Star](https://github.com/login?return_to=%2Fvercel%2Fmodelfusion)
[Notifications](https://github.com/login?return_to=%2Fvercel%2Fmodelfusion)
- 
  [Code](https://github.com/vercel/modelfusion)
- 
  [Issues
          33](https://github.com/vercel/modelfusion/issues)
- 
  [Pull requests
          9](https://github.com/vercel/modelfusion/pulls)
- 
  [Actions](https://github.com/vercel/modelfusion/actions)
- 
  [Security](https://github.com/vercel/modelfusion/security)
- 
  [Insights](https://github.com/vercel/modelfusion/pulse)
[Code](https://github.com/vercel/modelfusion)
[Issues
          33](https://github.com/vercel/modelfusion/issues)
[Pull requests
          9](https://github.com/vercel/modelfusion/pulls)
[Actions](https://github.com/vercel/modelfusion/actions)
[Security](https://github.com/vercel/modelfusion/security)
[Insights](https://github.com/vercel/modelfusion/pulse)
- 


    [Code](https://github.com/vercel/modelfusion)


- 


    [Issues](https://github.com/vercel/modelfusion/issues)


- 


    [Pull requests](https://github.com/vercel/modelfusion/pulls)


- 


    [Actions](https://github.com/vercel/modelfusion/actions)


- 


    [Security](https://github.com/vercel/modelfusion/security)


- 


    [Insights](https://github.com/vercel/modelfusion/pulse)


[Code](https://github.com/vercel/modelfusion)
[Issues](https://github.com/vercel/modelfusion/issues)
[Pull requests](https://github.com/vercel/modelfusion/pulls)
[Actions](https://github.com/vercel/modelfusion/actions)
[Security](https://github.com/vercel/modelfusion/security)
[Insights](https://github.com/vercel/modelfusion/pulse)

# vercel/modelfusion

[Branches](https://github.com/vercel/modelfusion/branches)
[Tags](https://github.com/vercel/modelfusion/tags)

## History
[2,522 Commits](https://github.com/vercel/modelfusion/commits/main/)
[.github/workflows](https://github.com/vercel/modelfusion/tree/main/.github/workflows)
[.github/workflows](https://github.com/vercel/modelfusion/tree/main/.github/workflows)
[.husky](https://github.com/vercel/modelfusion/tree/main/.husky)
[.husky](https://github.com/vercel/modelfusion/tree/main/.husky)
[.vscode](https://github.com/vercel/modelfusion/tree/main/.vscode)
[.vscode](https://github.com/vercel/modelfusion/tree/main/.vscode)
[docs](https://github.com/vercel/modelfusion/tree/main/docs)
[docs](https://github.com/vercel/modelfusion/tree/main/docs)
[examples](https://github.com/vercel/modelfusion/tree/main/examples)
[examples](https://github.com/vercel/modelfusion/tree/main/examples)
[packages](https://github.com/vercel/modelfusion/tree/main/packages)
[packages](https://github.com/vercel/modelfusion/tree/main/packages)
[test-environments](https://github.com/vercel/modelfusion/tree/main/test-environments)
[test-environments](https://github.com/vercel/modelfusion/tree/main/test-environments)
[tools](https://github.com/vercel/modelfusion/tree/main/tools)
[tools](https://github.com/vercel/modelfusion/tree/main/tools)
[.eslintignore](https://github.com/vercel/modelfusion/blob/main/.eslintignore)
[.eslintignore](https://github.com/vercel/modelfusion/blob/main/.eslintignore)
[.eslintrc.json](https://github.com/vercel/modelfusion/blob/main/.eslintrc.json)
[.eslintrc.json](https://github.com/vercel/modelfusion/blob/main/.eslintrc.json)
[.gitignore](https://github.com/vercel/modelfusion/blob/main/.gitignore)
[.gitignore](https://github.com/vercel/modelfusion/blob/main/.gitignore)
[.prettierrc.json](https://github.com/vercel/modelfusion/blob/main/.prettierrc.json)
[.prettierrc.json](https://github.com/vercel/modelfusion/blob/main/.prettierrc.json)
[CHANGELOG.md](https://github.com/vercel/modelfusion/blob/main/CHANGELOG.md)
[CHANGELOG.md](https://github.com/vercel/modelfusion/blob/main/CHANGELOG.md)
[CONTRIBUTING.md](https://github.com/vercel/modelfusion/blob/main/CONTRIBUTING.md)
[CONTRIBUTING.md](https://github.com/vercel/modelfusion/blob/main/CONTRIBUTING.md)
[LICENSE](https://github.com/vercel/modelfusion/blob/main/LICENSE)
[LICENSE](https://github.com/vercel/modelfusion/blob/main/LICENSE)
[README.md](https://github.com/vercel/modelfusion/blob/main/README.md)
[README.md](https://github.com/vercel/modelfusion/blob/main/README.md)
[lint-staged.config.cjs](https://github.com/vercel/modelfusion/blob/main/lint-staged.config.cjs)
[lint-staged.config.cjs](https://github.com/vercel/modelfusion/blob/main/lint-staged.config.cjs)
[package.json](https://github.com/vercel/modelfusion/blob/main/package.json)
[package.json](https://github.com/vercel/modelfusion/blob/main/package.json)
[pnpm-lock.yaml](https://github.com/vercel/modelfusion/blob/main/pnpm-lock.yaml)
[pnpm-lock.yaml](https://github.com/vercel/modelfusion/blob/main/pnpm-lock.yaml)
[pnpm-workspace.yaml](https://github.com/vercel/modelfusion/blob/main/pnpm-workspace.yaml)
[pnpm-workspace.yaml](https://github.com/vercel/modelfusion/blob/main/pnpm-workspace.yaml)
[turbo.json](https://github.com/vercel/modelfusion/blob/main/turbo.json)
[turbo.json](https://github.com/vercel/modelfusion/blob/main/turbo.json)

## Repository files navigation
- README
- MIT license
- Security
README
MIT license
Security

### The TypeScript library for building AI applications.

Introduction | Quick Install | Usage | Documentation | Examples | Contributing | [modelfusion.dev](https://modelfusion.dev)

## Introduction
Important
ModelFusion has joined Vercel and is being integrated into the [Vercel AI SDK](https://sdk.vercel.ai/docs/introduction). We are bringing the best parts of modelfusion to the Vercel AI SDK, starting with text generation, structured object generation, and tool calls. Please check out the AI SDK for the latest developments.
ModelFusion is an abstraction layer for integrating AI models into JavaScript and TypeScript applications, unifying the API for common operations such as text streaming, object generation, and tool usage. It provides features to support production environments, including observability hooks, logging, and automatic retries. You can use ModelFusion to build AI applications, chatbots, and agents.
- Vendor-neutral: ModelFusion is a non-commercial open source project that is community-driven. You can use it with any supported provider.
- Multi-modal: ModelFusion supports a wide range of models including text generation, image generation, vision, text-to-speech, speech-to-text, and embedding models.
- Type inference and validation: ModelFusion infers TypeScript types wherever possible and validates model responses.
- Observability and logging: ModelFusion provides an observer framework and logging support.
- Resilience and robustness: ModelFusion ensures seamless operation through automatic retries, throttling, and error handling mechanisms.
- Built for production: ModelFusion is fully tree-shakeable, can be used in serverless environments, and only uses a minimal set of dependencies.

## Quick Install
```
npm install modelfusion
```

Or use a starter template:
- [ModelFusion terminal app starter](https://github.com/lgrammel/modelfusion-terminal-app-starter)
- [Next.js, Vercel AI SDK, Llama.cpp & ModelFusion starter](https://github.com/lgrammel/modelfusion-llamacpp-nextjs-starter)
- [Next.js, Vercel AI SDK, Ollama & ModelFusion starter](https://github.com/lgrammel/modelfusion-ollama-nextjs-starter)
[ModelFusion terminal app starter](https://github.com/lgrammel/modelfusion-terminal-app-starter)
[Next.js, Vercel AI SDK, Llama.cpp & ModelFusion starter](https://github.com/lgrammel/modelfusion-llamacpp-nextjs-starter)
[Next.js, Vercel AI SDK, Ollama & ModelFusion starter](https://github.com/lgrammel/modelfusion-ollama-nextjs-starter)

## Usage Examples
Tip
The basic examples are a great way to get started and to explore in parallel with the documentation. You can find them in the [examples/basic](https://github.com/lgrammel/modelfusion/tree/main/examples/basic) folder.
You can provide API keys for the different [integrations](https://modelfusion.dev/integration/model-provider/) using environment variables (e.g., OPENAI_API_KEY) or pass them into the model constructors as options.

```
OPENAI_API_KEY
```

### [Generate Text](https://modelfusion.dev/guide/function/generate-text)
[Generate Text](https://modelfusion.dev/guide/function/generate-text)
Generate text using a language model and a prompt. You can stream the text if it is supported by the model. You can use images for multi-modal prompting if the model supports it (e.g. with llama.cpp).
You can use [prompt styles](https://modelfusion.dev/guide/function/generate-text) to use text, instruction, or chat prompts.

#### generateText

```
import { generateText, openai } from "modelfusion";

const text = await generateText({
  model: openai.CompletionTextGenerator({ model: "gpt-3.5-turbo-instruct" }),
  prompt: "Write a short story about a robot learning to love:\n\n",
});
```

Providers: OpenAI, OpenAI compatible, Llama.cpp, Ollama, Mistral, Hugging Face, [Cohere](https://modelfusion.dev/integration/model-provider/cohere)

#### streamText

```
import { streamText, openai } from "modelfusion";

const textStream = await streamText({
  model: openai.CompletionTextGenerator({ model: "gpt-3.5-turbo-instruct" }),
  prompt: "Write a short story about a robot learning to love:\n\n",
});

for await (const textPart of textStream) {
  process.stdout.write(textPart);
}
```

Providers: OpenAI, OpenAI compatible, Llama.cpp, Ollama, Mistral, [Cohere](https://modelfusion.dev/integration/model-provider/cohere)

#### streamText with multi-modal prompt
Multi-modal vision models such as GPT 4 Vision can process images as part of the prompt.

```
import { streamText, openai } from "modelfusion";
import { readFileSync } from "fs";

const image = readFileSync("./image.png");

const textStream = await streamText({
  model: openai
    .ChatTextGenerator({ model: "gpt-4-vision-preview" })
    .withInstructionPrompt(),

  prompt: {
    instruction: [
      { type: "text", text: "Describe the image in detail." },
      { type: "image", image, mimeType: "image/png" },
    ],
  },
});

for await (const textPart of textStream) {
  process.stdout.write(textPart);
}
```

Providers: OpenAI, OpenAI compatible, Llama.cpp, [Ollama](https://modelfusion.dev/integration/model-provider/ollama)

### [Generate Object](https://modelfusion.dev/guide/function/generate-object)
[Generate Object](https://modelfusion.dev/guide/function/generate-object)
Generate typed objects using a language model and a schema.

#### generateObject
Generate an object that matches a schema.

```
import {
  ollama,
  zodSchema,
  generateObject,
  jsonObjectPrompt,
} from "modelfusion";

const sentiment = await generateObject({
  model: ollama
    .ChatTextGenerator({
      model: "openhermes2.5-mistral",
      maxGenerationTokens: 1024,
      temperature: 0,
    })
    .asObjectGenerationModel(jsonObjectPrompt.instruction()),

  schema: zodSchema(
    z.object({
      sentiment: z
        .enum(["positive", "neutral", "negative"])
        .describe("Sentiment."),
    })
  ),

  prompt: {
    system:
      "You are a sentiment evaluator. " +
      "Analyze the sentiment of the following product review:",
    instruction:
      "After I opened the package, I was met by a very unpleasant smell " +
      "that did not disappear even after washing. Never again!",
  },
});
```

Providers: OpenAI, Ollama, [Llama.cpp](https://modelfusion.dev//integration/model-provider/llama.cpp)

#### streamObject
Stream a object that matches a schema. Partial objects before the final part are untyped JSON.

```
import { zodSchema, openai, streamObject } from "modelfusion";

const objectStream = await streamObject({
  model: openai
    .ChatTextGenerator(/* ... */)
    .asFunctionCallObjectGenerationModel({
      fnName: "generateCharacter",
      fnDescription: "Generate character descriptions.",
    })
    .withTextPrompt(),

  schema: zodSchema(
    z.object({
      characters: z.array(
        z.object({
          name: z.string(),
          class: z
            .string()
            .describe("Character class, e.g. warrior, mage, or thief."),
          description: z.string(),
        })
      ),
    })
  ),

  prompt: "Generate 3 character descriptions for a fantasy role playing game.",
});

for await (const { partialObject } of objectStream) {
  console.clear();
  console.log(partialObject);
}
```

Providers: OpenAI, Ollama, [Llama.cpp](https://modelfusion.dev//integration/model-provider/llama.cpp)

### [Generate Image](https://modelfusion.dev/guide/function/generate-image)
[Generate Image](https://modelfusion.dev/guide/function/generate-image)
Generate an image from a prompt.

```
import { generateImage, openai } from "modelfusion";

const image = await generateImage({
  model: openai.ImageGenerator({ model: "dall-e-3", size: "1024x1024" }),
  prompt:
    "the wicked witch of the west in the style of early 19th century painting",
});
```

Providers: OpenAI (Dall·E), Stability AI, [Automatic1111](https://modelfusion.dev/integration/model-provider/automatic1111)

### [Generate Speech](https://modelfusion.dev/guide/function/generate-speech)
[Generate Speech](https://modelfusion.dev/guide/function/generate-speech)
Synthesize speech (audio) from text. Also called TTS (text-to-speech).

#### generateSpeech
generateSpeech synthesizes speech from text.

```
generateSpeech
```


```
import { generateSpeech, lmnt } from "modelfusion";

// `speech` is a Uint8Array with MP3 audio data
const speech = await generateSpeech({
  model: lmnt.SpeechGenerator({
    voice: "034b632b-df71-46c8-b440-86a42ffc3cf3", // Henry
  }),
  text:
    "Good evening, ladies and gentlemen! Exciting news on the airwaves tonight " +
    "as The Rolling Stones unveil 'Hackney Diamonds,' their first collection of " +
    "fresh tunes in nearly twenty years, featuring the illustrious Lady Gaga, the " +
    "magical Stevie Wonder, and the final beats from the late Charlie Watts.",
});
```

Providers: Eleven Labs, LMNT, [OpenAI](https://modelfusion.dev/integration/model-provider/openai)

#### streamSpeech
generateSpeech generates a stream of speech chunks from text or from a text stream. Depending on the model, this can be fully duplex.

```
generateSpeech
```


```
import { streamSpeech, elevenlabs } from "modelfusion";

const textStream: AsyncIterable<string>;

const speechStream = await streamSpeech({
  model: elevenlabs.SpeechGenerator({
    model: "eleven_turbo_v2",
    voice: "pNInz6obpgDQGcFmaJgB", // Adam
    optimizeStreamingLatency: 1,
    voiceSettings: { stability: 1, similarityBoost: 0.35 },
    generationConfig: {
      chunkLengthSchedule: [50, 90, 120, 150, 200],
    },
  }),
  text: textStream,
});

for await (const part of speechStream) {
  // each part is a Uint8Array with MP3 audio data
}
```

Providers: [Eleven Labs](https://modelfusion.dev/integration/model-provider/elevenlabs)

### [Generate Transcription](https://modelfusion.dev/guide/function/generate-transcription)
[Generate Transcription](https://modelfusion.dev/guide/function/generate-transcription)
Transcribe speech (audio) data into text. Also called speech-to-text (STT).

```
import { generateTranscription, openai } from "modelfusion";
import fs from "node:fs";

const transcription = await generateTranscription({
  model: openai.Transcriber({ model: "whisper-1" }),
  mimeType: "audio/mp3",
  audioData: await fs.promises.readFile("data/test.mp3"),
});
```

Providers: OpenAI (Whisper), [Whisper.cpp](https://modelfusion.dev/integration/model-provider/whispercpp)

### [Embed Value](https://modelfusion.dev/guide/function/embed)
[Embed Value](https://modelfusion.dev/guide/function/embed)
Create embeddings for text and other values. Embeddings are vectors that represent the essence of the values in the context of the model.

```
import { embed, embedMany, openai } from "modelfusion";

// embed single value:
const embedding = await embed({
  model: openai.TextEmbedder({ model: "text-embedding-ada-002" }),
  value: "At first, Nox didn't know what to do with the pup.",
});

// embed many values:
const embeddings = await embedMany({
  model: openai.TextEmbedder({ model: "text-embedding-ada-002" }),
  values: [
    "At first, Nox didn't know what to do with the pup.",
    "He keenly observed and absorbed everything around him, from the birds in the sky to the trees in the forest.",
  ],
});
```

Providers: OpenAI, OpenAI compatible, Llama.cpp, Ollama, Mistral, Hugging Face, [Cohere](https://modelfusion.dev/integration/model-provider/cohere)

### [Classify Value](https://modelfusion.dev/guide/function/classify)
[Classify Value](https://modelfusion.dev/guide/function/classify)
Classifies a value into a category.

```
import { classify, EmbeddingSimilarityClassifier, openai } from "modelfusion";

const classifier = new EmbeddingSimilarityClassifier({
  embeddingModel: openai.TextEmbedder({ model: "text-embedding-ada-002" }),
  similarityThreshold: 0.82,
  clusters: [
    {
      name: "politics" as const,
      values: [
        "they will save the country!",
        // ...
      ],
    },
    {
      name: "chitchat" as const,
      values: [
        "how's the weather today?",
        // ...
      ],
    },
  ],
});

// strongly typed result:
const result = await classify({
  model: classifier,
  value: "don't you love politics?",
});
```

Classifiers: [EmbeddingSimilarityClassifier](https://modelfusion.dev/guide/function/classify)

### [Tokenize Text](https://modelfusion.dev/guide/function/tokenize-text)
[Tokenize Text](https://modelfusion.dev/guide/function/tokenize-text)
Split text into tokens and reconstruct the text from tokens.

```
const tokenizer = openai.Tokenizer({ model: "gpt-4" });

const text = "At first, Nox didn't know what to do with the pup.";

const tokenCount = await countTokens(tokenizer, text);

const tokens = await tokenizer.tokenize(text);
const tokensAndTokenTexts = await tokenizer.tokenizeWithTexts(text);
const reconstructedText = await tokenizer.detokenize(tokens);
```

Providers: OpenAI, Llama.cpp, [Cohere](https://modelfusion.dev/integration/model-provider/cohere)

### [Tools](https://modelfusion.dev/guide/tools)
[Tools](https://modelfusion.dev/guide/tools)
Tools are functions (and associated metadata) that can be executed by an AI model. They are useful for building chatbots and agents.
ModelFusion offers several tools out-of-the-box: Math.js, MediaWiki Search, SerpAPI, Google Custom Search. You can also create [custom tools](https://modelfusion.dev/guide/tools).

#### [runTool](https://modelfusion.dev/guide/tools/run-tool)
[runTool](https://modelfusion.dev/guide/tools/run-tool)
With runTool, you can ask a tool-compatible language model (e.g. OpenAI chat) to invoke a single tool. runTool first generates a tool call and then executes the tool with the arguments.

```
runTool
```


```
runTool
```


```
const { tool, toolCall, args, ok, result } = await runTool({
  model: openai.ChatTextGenerator({ model: "gpt-3.5-turbo" }),
  too: calculator,
  prompt: [openai.ChatMessage.user("What's fourteen times twelve?")],
});

console.log(`Tool call:`, toolCall);
console.log(`Tool:`, tool);
console.log(`Arguments:`, args);
console.log(`Ok:`, ok);
console.log(`Result or Error:`, result);
```


#### [runTools](https://modelfusion.dev/guide/tools/run-tools)
[runTools](https://modelfusion.dev/guide/tools/run-tools)
With runTools, you can ask a language model to generate several tool calls as well as text. The model will choose which tools (if any) should be called with which arguments. Both the text and the tool calls are optional. This function executes the tools.

```
runTools
```


```
const { text, toolResults } = await runTools({
  model: openai.ChatTextGenerator({ model: "gpt-3.5-turbo" }),
  tools: [calculator /* ... */],
  prompt: [openai.ChatMessage.user("What's fourteen times twelve?")],
});
```


#### [Agent Loop](https://modelfusion.dev/guide/tools/agent-loop)
[Agent Loop](https://modelfusion.dev/guide/tools/agent-loop)
You can use runTools to implement an agent loop that responds to user messages and executes tools. [Learn more](https://modelfusion.dev/guide/tools/agent-loop).

```
runTools
```

### [Vector Indices](https://modelfusion.dev/guide/vector-index)
[Vector Indices](https://modelfusion.dev/guide/vector-index)

```
const texts = [
  "A rainbow is an optical phenomenon that can occur under certain meteorological conditions.",
  "It is caused by refraction, internal reflection and dispersion of light in water droplets resulting in a continuous spectrum of light appearing in the sky.",
  // ...
];

const vectorIndex = new MemoryVectorIndex<string>();
const embeddingModel = openai.TextEmbedder({
  model: "text-embedding-ada-002",
});

// update an index - usually done as part of an ingestion process:
await upsertIntoVectorIndex({
  vectorIndex,
  embeddingModel,
  objects: texts,
  getValueToEmbed: (text) => text,
});

// retrieve text chunks from the vector index - usually done at query time:
const retrievedTexts = await retrieve(
  new VectorIndexRetriever({
    vectorIndex,
    embeddingModel,
    maxResults: 3,
    similarityThreshold: 0.8,
  }),
  "rainbow and water droplets"
);
```

Available Vector Stores: Memory, SQLite VSS, [Pinecone](https://modelfusion.dev/integration/vector-index/pinecone)

### [Text Generation Prompt Styles](https://modelfusion.dev/guide/function/generate-text)
[Text Generation Prompt Styles](https://modelfusion.dev/guide/function/generate-text)
You can use different prompt styles (such as text, instruction or chat prompts) with ModelFusion text generation models. These prompt styles can be accessed through the methods .withTextPrompt(), .withChatPrompt() and .withInstructionPrompt():

```
.withTextPrompt()
```


```
.withChatPrompt()
```


```
.withInstructionPrompt()
```


#### Text Prompt Style

```
const text = await generateText({
  model: openai
    .ChatTextGenerator({
      // ...
    })
    .withTextPrompt(),

  prompt: "Write a short story about a robot learning to love",
});
```


#### Instruction Prompt Style

```
const text = await generateText({
  model: llamacpp
    .CompletionTextGenerator({
      // run https://huggingface.co/TheBloke/Llama-2-7B-Chat-GGUF with llama.cpp
      promptTemplate: llamacpp.prompt.Llama2, // Set prompt template
      contextWindowSize: 4096, // Llama 2 context window size
      maxGenerationTokens: 512,
    })
    .withInstructionPrompt(),

  prompt: {
    system: "You are a story writer.",
    instruction: "Write a short story about a robot learning to love.",
  },
});
```


#### Chat Prompt Style

```
const textStream = await streamText({
  model: openai
    .ChatTextGenerator({
      model: "gpt-3.5-turbo",
    })
    .withChatPrompt(),

  prompt: {
    system: "You are a celebrated poet.",
    messages: [
      {
        role: "user",
        content: "Suggest a name for a robot.",
      },
      {
        role: "assistant",
        content: "I suggest the name Robbie",
      },
      {
        role: "user",
        content: "Write a short story about Robbie learning to love",
      },
    ],
  },
});
```

### [Image Generation Prompt Templates](https://modelfusion.dev/guide/function/generate-image/prompt-format)
[Image Generation Prompt Templates](https://modelfusion.dev/guide/function/generate-image/prompt-format)
You an use prompt templates with image models as well, e.g. to use a basic text prompt. It is available as a shorthand method:

```
const image = await generateImage({
  model: stability
    .ImageGenerator({
      //...
    })
    .withTextPrompt(),

  prompt:
    "the wicked witch of the west in the style of early 19th century painting",
});
```

### Metadata and original responses
ModelFusion model functions return rich responses that include the raw (original) response and metadata when you set the fullResponse argument to true.

```
fullResponse
```


```
true
```


```
// access the raw response (needs to be typed) and the metadata:
const { text, rawResponse, metadata } = await generateText({
  model: openai.CompletionTextGenerator({
    model: "gpt-3.5-turbo-instruct",
    maxGenerationTokens: 1000,
    n: 2, // generate 2 completions
  }),
  prompt: "Write a short story about a robot learning to love:\n\n",
  fullResponse: true,
});

console.log(metadata);

// cast to the raw response type:
for (const choice of (rawResponse as OpenAICompletionResponse).choices) {
  console.log(choice.text);
}
```

### Logging and Observability

ModelFusion provides an observer framework and [logging support](https://modelfusion.dev/guide/util/logging). You can easily trace runs and call hierarchies, and you can add your own observers.

#### Enabling Logging on a Function Call

```
import { generateText, openai } from "modelfusion";

const text = await generateText({
  model: openai.CompletionTextGenerator({ model: "gpt-3.5-turbo-instruct" }),
  prompt: "Write a short story about a robot learning to love:\n\n",
  logging: "detailed-object",
});
```

### [Guide](https://modelfusion.dev/guide)

[Guide](https://modelfusion.dev/guide)
- Model Functions

Generate text
Generate object
Generate image
Generate speech
Generate transcription
Tokenize Text
Embed Value
[Classify Value](https://modelfusion.dev/guide/function/classify)


- [Generate text](https://modelfusion.dev/guide/function/generate-text)
- [Generate object](https://modelfusion.dev/guide/function/generate-object)
- [Generate image](https://modelfusion.dev/guide/function/generate-image)
- [Generate speech](https://modelfusion.dev/guide/function/generate-speech)
- [Generate transcription](https://modelfusion.dev/guide/function/generate-transcription)
- [Tokenize Text](https://modelfusion.dev/guide/function/tokenize-text)
- [Embed Value](https://modelfusion.dev/guide/function/embed)
- [Classify Value](https://modelfusion.dev/guide/function/classify)
- Tools

Run Tool
Run Tools
Agent Loop
Available Tools
Custom Tools
[Advanced](https://modelfusion.dev/guide/tools/advanced)


- [Run Tool](https://modelfusion.dev/guide/tools/run-tool)
- [Run Tools](https://modelfusion.dev/guide/tools/run-tools)
- [Agent Loop](https://modelfusion.dev/guide/tools/agent-loop)
- [Available Tools](https://modelfusion.dev/guide/tools/available-tools/)
- [Custom Tools](https://modelfusion.dev/guide/tools/custom-tools)
- [Advanced](https://modelfusion.dev/guide/tools/advanced)
- Vector Indices

Upsert
[Retrieve](https://modelfusion.dev/guide/vector-index/retrieve)


- [Upsert](https://modelfusion.dev/guide/vector-index/upsert)
- [Retrieve](https://modelfusion.dev/guide/vector-index/retrieve)
- Text Chunks

[Split Text](https://modelfusion.dev/guide/text-chunk/split)


- [Split Text](https://modelfusion.dev/guide/text-chunk/split)
- Utilities

API Configuration

Base URL
Headers
Retry strategies
Throttling strategies


Logging
Observers
Runs
[Abort signals](https://modelfusion.dev/guide/util/abort)


- API Configuration

Base URL
Headers
Retry strategies
[Throttling strategies](https://modelfusion.dev/guide/util/api-configuration/throttle)


- [Base URL](https://modelfusion.dev/guide/util/api-configuration/base-url)
- [Headers](https://modelfusion.dev/guide/util/api-configuration/headers)
- [Retry strategies](https://modelfusion.dev/guide/util/api-configuration/retry)
- [Throttling strategies](https://modelfusion.dev/guide/util/api-configuration/throttle)
- [Logging](https://modelfusion.dev/guide/util/logging)
- [Observers](https://modelfusion.dev/guide/util/observer)
- [Runs](https://modelfusion.dev/guide/util/run)
- [Abort signals](https://modelfusion.dev/guide/util/abort)
- Experimental

Guards
Server
[Cost calculation](https://modelfusion.dev/guide/experimental/cost-calculation)


- [Guards](https://modelfusion.dev/guide/experimental/guard)
- [Server](https://modelfusion.dev/guide/experimental/server/)
- [Cost calculation](https://modelfusion.dev/guide/experimental/cost-calculation)
- Troubleshooting

[Bundling](https://modelfusion.dev/guide/troubleshooting/bundling)


- [Bundling](https://modelfusion.dev/guide/troubleshooting/bundling)
[Model Functions](https://modelfusion.dev/guide/function/)
- [Generate text](https://modelfusion.dev/guide/function/generate-text)
- [Generate object](https://modelfusion.dev/guide/function/generate-object)
- [Generate image](https://modelfusion.dev/guide/function/generate-image)
- [Generate speech](https://modelfusion.dev/guide/function/generate-speech)
- [Generate transcription](https://modelfusion.dev/guide/function/generate-transcription)
- [Tokenize Text](https://modelfusion.dev/guide/function/tokenize-text)
- [Embed Value](https://modelfusion.dev/guide/function/embed)
- [Classify Value](https://modelfusion.dev/guide/function/classify)
[Generate text](https://modelfusion.dev/guide/function/generate-text)
[Generate object](https://modelfusion.dev/guide/function/generate-object)
[Generate image](https://modelfusion.dev/guide/function/generate-image)
[Generate speech](https://modelfusion.dev/guide/function/generate-speech)
[Generate transcription](https://modelfusion.dev/guide/function/generate-transcription)
[Tokenize Text](https://modelfusion.dev/guide/function/tokenize-text)
[Embed Value](https://modelfusion.dev/guide/function/embed)
[Classify Value](https://modelfusion.dev/guide/function/classify)
[Tools](https://modelfusion.dev/guide/tools)
- [Run Tool](https://modelfusion.dev/guide/tools/run-tool)
- [Run Tools](https://modelfusion.dev/guide/tools/run-tools)
- [Agent Loop](https://modelfusion.dev/guide/tools/agent-loop)

### [Guide](https://modelfusion.dev/guide)
- [Available Tools](https://modelfusion.dev/guide/tools/available-tools/)
- [Custom Tools](https://modelfusion.dev/guide/tools/custom-tools)
- [Advanced](https://modelfusion.dev/guide/tools/advanced)
[Run Tool](https://modelfusion.dev/guide/tools/run-tool)
[Run Tools](https://modelfusion.dev/guide/tools/run-tools)
[Agent Loop](https://modelfusion.dev/guide/tools/agent-loop)
[Available Tools](https://modelfusion.dev/guide/tools/available-tools/)
[Custom Tools](https://modelfusion.dev/guide/tools/custom-tools)
[Advanced](https://modelfusion.dev/guide/tools/advanced)
[Vector Indices](https://modelfusion.dev/guide/vector-index)
- [Upsert](https://modelfusion.dev/guide/vector-index/upsert)
- [Retrieve](https://modelfusion.dev/guide/vector-index/retrieve)
[Upsert](https://modelfusion.dev/guide/vector-index/upsert)
[Retrieve](https://modelfusion.dev/guide/vector-index/retrieve)
[Text Chunks](https://modelfusion.dev/guide/text-chunk/)
- [Split Text](https://modelfusion.dev/guide/text-chunk/split)
[Split Text](https://modelfusion.dev/guide/text-chunk/split)
[Utilities](https://modelfusion.dev/guide/util/)
- API Configuration

Base URL
Headers
Retry strategies
[Throttling strategies](https://modelfusion.dev/guide/util/api-configuration/throttle)


- [Base URL](https://modelfusion.dev/guide/util/api-configuration/base-url)
- [Headers](https://modelfusion.dev/guide/util/api-configuration/headers)
- [Retry strategies](https://modelfusion.dev/guide/util/api-configuration/retry)
- [Throttling strategies](https://modelfusion.dev/guide/util/api-configuration/throttle)
- [Logging](https://modelfusion.dev/guide/util/logging)
- [Observers](https://modelfusion.dev/guide/util/observer)
- [Runs](https://modelfusion.dev/guide/util/run)
- [Abort signals](https://modelfusion.dev/guide/util/abort)
[API Configuration](https://modelfusion.dev/guide/util/api-configuration)
- [Base URL](https://modelfusion.dev/guide/util/api-configuration/base-url)
- [Headers](https://modelfusion.dev/guide/util/api-configuration/headers)
- [Retry strategies](https://modelfusion.dev/guide/util/api-configuration/retry)
- [Throttling strategies](https://modelfusion.dev/guide/util/api-configuration/throttle)
[Base URL](https://modelfusion.dev/guide/util/api-configuration/base-url)
[Headers](https://modelfusion.dev/guide/util/api-configuration/headers)
[Retry strategies](https://modelfusion.dev/guide/util/api-configuration/retry)
[Throttling strategies](https://modelfusion.dev/guide/util/api-configuration/throttle)
[Logging](https://modelfusion.dev/guide/util/logging)
[Observers](https://modelfusion.dev/guide/util/observer)
[Runs](https://modelfusion.dev/guide/util/run)
[Abort signals](https://modelfusion.dev/guide/util/abort)
[Experimental](https://modelfusion.dev/guide/experimental/)
- [Guards](https://modelfusion.dev/guide/experimental/guard)
- [Server](https://modelfusion.dev/guide/experimental/server/)
- [Cost calculation](https://modelfusion.dev/guide/experimental/cost-calculation)
[Guards](https://modelfusion.dev/guide/experimental/guard)
[Server](https://modelfusion.dev/guide/experimental/server/)
[Cost calculation](https://modelfusion.dev/guide/experimental/cost-calculation)
[Troubleshooting](https://modelfusion.dev/guide/troubleshooting)
- [Bundling](https://modelfusion.dev/guide/troubleshooting/bundling)
[Bundling](https://modelfusion.dev/guide/troubleshooting/bundling)

### [Integrations](https://modelfusion.dev/integration/model-provider)
[Integrations](https://modelfusion.dev/integration/model-provider)

### [Examples & Tutorials](https://modelfusion.dev/tutorial)
[Examples & Tutorials](https://modelfusion.dev/tutorial)

### [Showcase](https://modelfusion.dev/tutorial/showcase)
[Showcase](https://modelfusion.dev/tutorial/showcase)

### [API Reference](https://modelfusion.dev/api/modules)
[API Reference](https://modelfusion.dev/api/modules)

### [Basic Examples](https://github.com/lgrammel/modelfusion/tree/main/examples/basic)
[Basic Examples](https://github.com/lgrammel/modelfusion/tree/main/examples/basic)
Examples for almost all of the individual functions and objects. Highly recommended to get started.

### [StoryTeller](https://github.com/lgrammel/storyteller)
[StoryTeller](https://github.com/lgrammel/storyteller)
multi-modal, object streaming, image generation, text to speech, speech to text, text generation, object generation, embeddings
StoryTeller is an exploratory web application that creates short audio stories for pre-school kids.

### [Chatbot (Next.JS)](https://github.com/lgrammel/modelfusion/tree/main/examples/chatbot-next-js)
[Chatbot (Next.JS)](https://github.com/lgrammel/modelfusion/tree/main/examples/chatbot-next-js)
Next.js app, OpenAI GPT-3.5-turbo, streaming, abort handling
A web chat with an AI assistant, implemented as a Next.js app.

### [Chat with PDF](https://github.com/lgrammel/modelfusion/tree/main/examples/pdf-chat-terminal)
[Chat with PDF](https://github.com/lgrammel/modelfusion/tree/main/examples/pdf-chat-terminal)
terminal app, PDF parsing, in memory vector indices, retrieval augmented generation, hypothetical document embedding
Ask questions about a PDF document and get answers from the document.

### [Next.js / ModelFusion Demos](https://github.com/lgrammel/modelfusion/tree/main/examples/nextjs)
[Next.js / ModelFusion Demos](https://github.com/lgrammel/modelfusion/tree/main/examples/nextjs)
Next.js app, image generation, transcription, object streaming, OpenAI, Stability AI, Ollama
Examples of using ModelFusion with Next.js 14 (App Router):
- image generation
- voice recording & transcription
- object streaming

### [Duplex Speech Streaming (using Vite/React & ModelFusion Server/Fastify)](https://github.com/lgrammel/modelfusion/tree/main/examples/speech-streaming-vite-react-fastify)
[Duplex Speech Streaming (using Vite/React & ModelFusion Server/Fastify)](https://github.com/lgrammel/modelfusion/tree/main/examples/speech-streaming-vite-react-fastify)
Speech Streaming, OpenAI, Elevenlabs streaming, Vite, Fastify, ModelFusion Server
Given a prompt, the server returns both a text and a speech stream response.

### [BabyAGI Agent](https://github.com/lgrammel/modelfusion/tree/main/examples/babyagi-agent)
[BabyAGI Agent](https://github.com/lgrammel/modelfusion/tree/main/examples/babyagi-agent)
terminal app, agent, BabyAGI
TypeScript implementation of the BabyAGI classic and BabyBeeAGI.

### [Wikipedia Agent](https://github.com/lgrammel/modelfusion/tree/main/examples/wikipedia-agent)
[Wikipedia Agent](https://github.com/lgrammel/modelfusion/tree/main/examples/wikipedia-agent)
terminal app, ReAct agent, GPT-4, OpenAI functions, tools
Get answers to questions from Wikipedia, e.g. "Who was born first, Einstein or Picasso?"

### [Middle school math agent](https://github.com/lgrammel/modelfusion/tree/main/examples/middle-school-math-agent)
[Middle school math agent](https://github.com/lgrammel/modelfusion/tree/main/examples/middle-school-math-agent)
terminal app, agent, tools, GPT-4
Small agent that solves middle school math problems. It uses a calculator tool to solve the problems.

### [PDF to Tweet](https://github.com/lgrammel/modelfusion/tree/main/examples/pdf-to-tweet)
[PDF to Tweet](https://github.com/lgrammel/modelfusion/tree/main/examples/pdf-to-tweet)
terminal app, PDF parsing, recursive information extraction, in memory vector index, _style example retrieval, OpenAI GPT-4, cost calculation
Extracts information about a topic from a PDF and writes a tweet in your own style about it.

### [Cloudflare Workers](https://github.com/lgrammel/modelfusion/tree/main/examples/cloudflare-workers)
[Cloudflare Workers](https://github.com/lgrammel/modelfusion/tree/main/examples/cloudflare-workers)
Cloudflare, OpenAI
Generate text on a Cloudflare Worker using ModelFusion and OpenAI.

### [Contributing Guide](https://github.com/lgrammel/modelfusion/blob/main/CONTRIBUTING.md)

[Contributing Guide](https://github.com/lgrammel/modelfusion/blob/main/CONTRIBUTING.md)
Read the [ModelFusion contributing guide](https://github.com/lgrammel/modelfusion/blob/main/CONTRIBUTING.md) to learn about the development process, how to propose bugfixes and improvements, and how to build and test your changes.

## About

The TypeScript library for building AI applications.
[modelfusion.dev](https://modelfusion.dev)

### Topics
[javascript](https://github.com/topics/javascript)
[typescript](https://github.com/topics/typescript)
[ai](https://github.com/topics/ai)
[js](https://github.com/topics/js)
[chatbot](https://github.com/topics/chatbot)
[ts](https://github.com/topics/ts)
[artificial-intelligence](https://github.com/topics/artificial-intelligence)
[openai](https://github.com/topics/openai)
[multi-modal](https://github.com/topics/multi-modal)
[whisper](https://github.com/topics/whisper)
[embedding](https://github.com/topics/embedding)
[mistral](https://github.com/topics/mistral)
[claude](https://github.com/topics/claude)
[huggingface](https://github.com/topics/huggingface)
[gpt-3](https://github.com/topics/gpt-3)
[dall-e](https://github.com/topics/dall-e)
[llm](https://github.com/topics/llm)
[stable-diffusion](https://github.com/topics/stable-diffusion)
[llamacpp](https://github.com/topics/llamacpp)
[ollama](https://github.com/topics/ollama)

### Resources
Readme

### License
MIT license

### Security policy
Security policy
[Activity](https://github.com/vercel/modelfusion/activity)
[Custom properties](https://github.com/vercel/modelfusion/custom-properties)

### Stars
[1.2k
      stars](https://github.com/vercel/modelfusion/stargazers)

### Watchers
[12
      watching](https://github.com/vercel/modelfusion/watchers)

### Forks
[89
      forks](https://github.com/vercel/modelfusion/forks)
[Report repository](https://github.com/contact/report-content?content_url=https%3A%2F%2Fgithub.com%2Fvercel%2Fmodelfusion&report=vercel+%28user%29)

## [Releases
219](https://github.com/vercel/modelfusion/releases)
[Releases
      219](https://github.com/vercel/modelfusion/releases)
[v0.137.0

          Latest

      Feb 24, 2024](https://github.com/vercel/modelfusion/releases/tag/v0.137.0)
[+ 218 releases](https://github.com/vercel/modelfusion/releases)

## [Used by 135](https://github.com/vercel/modelfusion/network/dependents)
[Used by 135](https://github.com/vercel/modelfusion/network/dependents)
[+ 127](https://github.com/vercel/modelfusion/network/dependents)

## [Contributors
12](https://github.com/vercel/modelfusion/graphs/contributors)
[Contributors
      12](https://github.com/vercel/modelfusion/graphs/contributors)

## Languages
- 
        [TypeScript
          98.4%](https://github.com/vercel/modelfusion/search?l=typescript)

- 
        [JavaScript
          1.6%](https://github.com/vercel/modelfusion/search?l=javascript)

[TypeScript
          98.4%](https://github.com/vercel/modelfusion/search?l=typescript)
[JavaScript
          1.6%](https://github.com/vercel/modelfusion/search?l=javascript)

### Footer navigation

- 
            [Terms](https://docs.github.com/site-policy/github-terms/github-terms-of-service)

- 
            [Privacy](https://docs.github.com/site-policy/privacy-policies/github-privacy-statement)

- 
            [Security](https://github.com/security)

- 
            [Status](https://www.githubstatus.com/)

- 
            [Docs](https://docs.github.com/)

- 
            [Contact](https://support.github.com?tags=dotcom-footer)

- 


      Manage cookies



- 


      Do not share my personal information



[Terms](https://docs.github.com/site-policy/github-terms/github-terms-of-service)
[Privacy](https://docs.github.com/site-policy/privacy-policies/github-privacy-statement)
[Security](https://github.com/security)
[Status](https://www.githubstatus.com/)
[Docs](https://docs.github.com/)
[Contact](https://support.github.com?tags=dotcom-footer)